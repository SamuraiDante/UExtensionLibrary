<?xml version="1.0"?>
<doc>
<assembly>
<name>
CConsole3.5CompatabilityClient
</name>
</assembly>
<members>
<member name="F:CConsoleCompatabilityClient.CConsole.ServiceHandler">
	<summary>
 The service handler for the CConsole web service
 </summary>
	<remarks>Changes to this may affect usability, use at your own risk</remarks>
</member><member name="F:CConsoleCompatabilityClient.CConsole.InstanceHandler">
	<summary>
 The instance handler for the CConsole web service
 </summary>
	<remarks>Changes to this may affect usability, use at your own risk</remarks>
</member><member name="F:CConsoleCompatabilityClient.CConsole.ConnectionClient">
	<summary>
 The connection client for the CConsole web service
 </summary>
	<remarks>Changes to this may affect usability, use at your own risk</remarks>
</member><member name="F:CConsoleCompatabilityClient.CConsole.DefaultWindow">
	<summary>
 The default window all calls that do not specify a window will write too.
 </summary>
</member><member name="F:CConsoleCompatabilityClient.CConsole.Tester">
	<summary>
 The embedded performance tester
 </summary>
</member><member name="F:CConsoleCompatabilityClient.CConsole.ErrorReportCount">
	<summary>
 The current count of error reports sent with this instance
 </summary>
</member><member name="P:CConsoleCompatabilityClient.CConsole.Enabled">
 ------------------------------------------------------------------------------------------
 <summary>Gets or sets a value indicating whether this <see cref="T:CConsoleCompatabilityClient.CConsole"/> is enabled, and able to display messages. </summary>
	<value><c>true</c> if enabled; otherwise, <c>false</c> and all calls will be ignored.</value>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.Write(System.String)">
 ------------------------------------------------------------------------------------------
  Name: Write
  -----------------------------------------------------------------------------  -------------
 <summary> Writes the specified text to the CConsole output. </summary>
	<param name="strText">The text to write to the CConsole output.</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.Write(System.String,System.String)">
 ------------------------------------------------------------------------------------------
  Name: Write
  ------------------------------------------------------------------------------------------
 <summary> Writes the specified text to the CConsole output. </summary>
	<param name="strText">The text to write to the CConsole output.</param>
	<param name="strWindowName">The name of the window to write the output into.</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.Write(System.String,System.String,System.Double)">
 ------------------------------------------------------------------------------------------
  Name: Write
  ------------------------------------------------------------------------------------------
 <summary> Writes the specified text to the CConsole output. </summary>
	<param name="strText">The text to write to the CConsole output.</param>
	<param name="strWindowName">The name of the window to write the output into.</param>
	<param name="dblInterval">The minimum time in seconds allowed between writes to the output window</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.Write(System.Xml.Linq.XElement)">
 ------------------------------------------------------------------------------------------
 Name: Write
 ------------------------------------------------------------------------------------------
 <summary> Writes the specified XElement to the current default window. </summary>
	<param name="xelOutput">The XElement to write to the CConsole output.</param>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.Write(System.Xml.Linq.XElement,System.String)">
 ------------------------------------------------------------------------------------------
  Name: Write
  ------------------------------------------------------------------------------------------
 <summary> Writes the specified XElement to the specified window. </summary>
	<param name="xelOutput">The XElement to write to the CConsole output.</param>
	<param name="strWindow">The window name</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.Write(System.Collections.IEnumerable,System.String)">
 ------------------------------------------------------------------------------------------
 Name: Write
 ------------------------------------------------------------------------------------------
 <summary> Writes the specified IEnumerable to the CConsole output. </summary>
	<param name="ienuOutput">The IEnumberable to write to the CConsole output.</param>
	<param name="strWindow">The name of the window on which to write</param>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteEnumerable(System.Collections.IEnumerable,System.String,System.Double)">
 ------------------------------------------------------------------------------------------
 Name: Write
 ------------------------------------------------------------------------------------------
 <summary> Writes the specified IEnumerable to the CConsole output. </summary>
	<param name="ienuOutput">The IEnumerable to write to the CConsole output.</param>
	<param name="strWindow">The name of the window on which to write</param>
	<param name="dblInterval">The minimum time between writes to the console</param>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteLine(System.String)">
 ------------------------------------------------------------------------------------------
  Name: WriteLine
  ------------------------------------------------------------------------------------------
 <summary> Writes the specified string to the CConsole output, with a new line at the end. </summary>
	<param name="strText">The string to write to the CConsole output</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteLine(System.String,System.String)">
 ------------------------------------------------------------------------------------------
  Name: WriteLine
  ------------------------------------------------------------------------------------------
 <summary> Writes the specified string to the CConsole output, with a new line at the end. </summary>
	<param name="strText">The string to write to the CConsole output</param>
	<param name="strWindow">The name of the window on which to write</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteLine(System.String,System.String,System.Double)">
 ------------------------------------------------------------------------------------------
  Name: WriteLine
  ------------------------------------------------------------------------------------------
 <summary> Writes the specified string to the CConsole output, with a new line at the end. </summary>
	<param name="strText">The string to write to the CConsole output</param>
	<param name="strWindow">The name of the window on which to write</param>
	<param name="dblInterval">The minimum time between writes to the console</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteSeparator">
 ------------------------------------------------------------------------------------------
 Name: WriteSeparator
 ------------------------------------------------------------------------------------------
 <summary> Writes the current <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.Separator"/> with a return character at the end. </summary>
	<remarks>Write to the Main window</remarks>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteSeparator(System.String)">
 ------------------------------------------------------------------------------------------
 Name: WriteSeparator
 ------------------------------------------------------------------------------------------
 <summary> Writes the current <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.Separator"/> with a return character at the end. </summary>
	<param name="strWindow">The name of the window on which to write</param>
	<remarks>Write to the Main window</remarks>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteDataError(System.Object,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
 ------------------------------------------------------------------------------------------
 Name: WriteDataError
 ------------------------------------------------------------------------------------------
 <summary> Attachable handler for DataGridView DataErrors </summary>
	<param name="sender">The sending object.</param>
	<param name="e">The <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs"/> instance containing the event data.</param>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteException(System.Exception)">
 ------------------------------------------------------------------------------------------
  Name: WriteException
  ------------------------------------------------------------------------------------------
 <summary> Writes the specified exception to the Error window. </summary>
	<param name="ex">The exception to write.</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteException(System.Exception,System.String)">
 ------------------------------------------------------------------------------------------
  Name: WriteException
  ------------------------------------------------------------------------------------------
 <summary> Writes the specified exception to the specified window. </summary>
	<param name="ex">The exception to write.</param>
	<param name="strWindow">The window name.</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteIsNull(System.Object,System.String)">
 ------------------------------------------------------------------------------------------
  Name: WriteIsNull
  ------------------------------------------------------------------------------------------
 <summary> Writes a statement indicated whether or not the passed object is null. </summary>
	<param name="objToCheck">The object to check for null</param>
	<param name="strObjectName">Name of the object. This is placed as the beginning of the statement.</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteIsNull(System.Object,System.String,System.String)">
 ------------------------------------------------------------------------------------------
  Name: WriteIsNull
  ------------------------------------------------------------------------------------------
 <summary> Writes a statement indicated whether or not the passed object is null. </summary>
	<param name="objToCheck">The object to check for null</param>
	<param name="strObjectName">Name of the object. This is placed as the beginning of the statement.</param>
	<param name="strWindow">The name of the window on which to write</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteReached">
 ------------------------------------------------------------------------------------------
  Name: WriteReached
  ------------------------------------------------------------------------------------------
 <summary> Writes the file and line number where it was called to the current default window. </summary>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteReached(System.Int32)">
 ------------------------------------------------------------------------------------------
  Name: WriteReached
  ------------------------------------------------------------------------------------------
 <summary> Writes the specified number in '[Number] Reached' format to the current default window. </summary>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteReached(System.Int32,System.String)">
 ------------------------------------------------------------------------------------------
  Name: WriteReached
  ------------------------------------------------------------------------------------------
 <summary> Writes the specified number in '[Number] Reached' format to the specified window. </summary>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteReached(System.String)">
 ------------------------------------------------------------------------------------------
  Name: WriteReached
  ------------------------------------------------------------------------------------------
 <summary> Writes the file and line number where it was called to the specified window. </summary>
	<param name="strWindow">The window name.</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteClass(System.Object,System.String)">
 ------------------------------------------------------------------------------------------
 Name: WriteClass
 ------------------------------------------------------------------------------------------
 <summary> Breaks down the class, and prints all visible fields and properties to the console. </summary>
	<param name="objObject">The object to write out.</param>
	<param name="strWindowName">The name of the window on which to write</param>
	<remarks> Also breaks out lists in the object and prints them as well.
 Defaults to printing to the Main Tab</remarks>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteClass(System.Object)">
 ------------------------------------------------------------------------------------------
 Name: WriteClass
 ------------------------------------------------------------------------------------------
 <summary> Breaks down the class, and prints all visible fields and properties to the console. </summary>
	<param name="objObject">The object to write out.</param>
	<remarks> Also breaks out lists in the object and prints them as well.
 Defaults to printing to the Main Tab</remarks>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.GetPropertyValue(System.Object,System.String)">
 ------------------------------------------------------------------------------------------
 Name: GetPropertyValue
 ------------------------------------------------------------------------------------------
 <summary> Gets the specified properties value. </summary>
	<param name="objObject">The containing object.</param>
	<param name="strPropertyName">The name of the property.</param>
	<returns>System.Object.</returns>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.GetFieldValue(System.Object,System.String)">
 ------------------------------------------------------------------------------------------
 Name: GetFieldValue
 ------------------------------------------------------------------------------------------
 <summary> Gets the specified fields value. </summary>
	<param name="objObject">The containing object.</param>
	<param name="strFieldName">The name of the field.</param>
	<returns>System.Object.</returns>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.NewParagraph">
 ------------------------------------------------------------------------------------------
  Name: NewParagraph
  ------------------------------------------------------------------------------------------
 <summary> Adds a New Paragraph in the current default window. </summary>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.NewParagraph(System.String)">
 ------------------------------------------------------------------------------------------
  Name: NewParagraph
  ------------------------------------------------------------------------------------------
 <summary> Adds a New Paragraph in the specified window. </summary>
	<param name="strWindow">The name of the window to affect</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.SetStyle(CConsoleCompatabilityClient.CConsole.TextStyles)">
 ------------------------------------------------------------------------------------------
  Name: SetStyle
  ------------------------------------------------------------------------------------------
 <summary> Sets the style of the text in the current paragraph in the current default window </summary>
	<param name="TextStyle">The TextStyle to apply.</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.SetStyle(CConsoleCompatabilityClient.CConsole.TextStyles,System.String)">
 ------------------------------------------------------------------------------------------
  Name: SetStyle
  ------------------------------------------------------------------------------------------
 <summary> Sets the style of the text in the current paragraph in the specified window </summary>
	<param name="TextStyle">The TextStyle to apply.</param>
	<param name="strWindow">The name of the window to affect</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.SetFontSize(System.Double)">
 ------------------------------------------------------------------------------------------
  Name: SetFontSize
  ------------------------------------------------------------------------------------------
 <summary> Sets the size of the font in the current default window. </summary>
	<param name="dblFontSize">Font size in points</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.SetFontSize(System.Double,System.String)">
 ------------------------------------------------------------------------------------------
  Name: SetFontSize
  ------------------------------------------------------------------------------------------
 <summary> Sets the size of the font in the specified window. </summary>
	<param name="dblFontSize">Font size in points</param>
	<param name="strWindow">The name of the window to affect</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.SendErrorReport(System.Exception)">
 ------------------------------------------------------------------------------------------
  Name: SendErrorReport
  ------------------------------------------------------------------------------------------
 <summary> Sends a formatted error report to a special window. </summary>
	<param name="ex">The System.Exception to log.</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.WriteDistinct(System.String)">
 ------------------------------------------------------------------------------------------
 Name: WriteDistinct
 ------------------------------------------------------------------------------------------
 <summary> Writes a string only if it hasn't been written yet </summary>
	<param name="strOutput">The string to write.</param>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.ShowDataTable(System.Data.DataTable)">
 ------------------------------------------------------------------------------------------
  Name: ShowDataTable
  ------------------------------------------------------------------------------------------
 <summary> Sends the data table tot he CConsole Platform for viewing. </summary>
	<param name="dtToShow">The data table to show.</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.Message.Send">
 ------------------------------------------------------------------------------------------
  Name: Send
  ------------------------------------------------------------------------------------------
 <summary> Sends the message to the first local DebugPlatform instance found. </summary>
	<returns><c>true</c> if message was sent, <c>false</c> otherwise.</returns>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.CConsole.Message.ToString">
 ------------------------------------------------------------------------------------------
  Name: ToString
  ------------------------------------------------------------------------------------------
 <summary> Returns a <see cref="T:System.String"/> that represents this instance. </summary>
	<returns>A <see cref="T:System.String"/> that represents this instance.</returns>
  ------------------------------------------------------------------------------------------

</member><member name="T:CConsoleCompatabilityClient.CConsole">
 ------------------------------------------------------------------------------------------
  Name: CConsole
  ------------------------------------------------------------------------------------------
 <summary>A shared class for sending messages and commands to the currently subscribed CConsole Debug Platform</summary>
  ------------------------------------------------------------------------------------------

</member><member name="T:CConsoleCompatabilityClient.Performance.TimeUnit">
 ------------------------------------------------------------------------------------------
  Name: TimeUnit
  ------------------------------------------------------------------------------------------
 <summary>Performance.TimeUnit</summary>
  ------------------------------------------------------------------------------------------

</member><member name="T:CConsoleCompatabilityClient.Performance.MemoryUnit">
 ------------------------------------------------------------------------------------------
  Name: MemoryUnit
  ------------------------------------------------------------------------------------------
 <summary>Performance.MemoryUnit</summary>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.Performance.Name">
 ------------------------------------------------------------------------------------------
 <summary>Gets or sets the name of the test. </summary>
	<value>The test name.</value>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.Performance.TotalTime">
 ------------------------------------------------------------------------------------------
 <summary>Gets the total time between all logged cycles </summary>
	<value>The total time of the test.</value>
	<remarks>Ignores time taken for logging</remarks>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.Performance.TestCycles">
 ------------------------------------------------------------------------------------------
 <summary>Gets the test cycles for the test. </summary>
	<value>The test cycles for the test.</value>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.Performance.MemoryScale">
 ------------------------------------------------------------------------------------------
 <summary>Gets or sets the Performance.MemoryUnit to use when printing. </summary>
	<value>The current Performance.MemoryUnit.</value>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.Performance.TimeScale">
 ------------------------------------------------------------------------------------------
 <summary>Gets or sets the Performance.TimeUnit to use when printing. </summary>
	<value>The current Performance.TimeUnit</value>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.Performance.DisplayTestCycles">
 ------------------------------------------------------------------------------------------
 <summary>Gets or sets a value indicating whether or not to display all testing cycles when printing. </summary>
	<value>If <c>false</c> only the summary will be displayed when printing.</value>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.Performance.MemoryInUse">
 ------------------------------------------------------------------------------------------
 <summary>Gets the current memory usage by the current process. </summary>
	<value>The current memory usage.</value>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.Performance.Memory">
 ------------------------------------------------------------------------------------------
 <summary>Gets the current serializable memory usage of the performance tester object. </summary>
	<value>The current serializable memory usage of the performance tester object.</value>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.Performance.TestTimeAverage">
 ------------------------------------------------------------------------------------------
 <summary>Gets the test time average for all logged cycles. </summary>
	<value>The average time.</value>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.Performance.TestMemoryAverage">
 ------------------------------------------------------------------------------------------
 <summary>Gets the test memory average for all logged cycles. </summary>
	<value>The average memory .</value>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.Performance.#ctor">
 ------------------------------------------------------------------------------------------
  Constructor: 
  ------------------------------------------------------------------------------------------
 <summary>Initializes a new instance of the <see cref="T:CConsoleCompatabilityClient.Performance"/> class.</summary>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.Performance.ToConsole">
 ------------------------------------------------------------------------------------------
 Name: ToConsole
 ------------------------------------------------------------------------------------------
 <summary> Writes the timers current value to the CConsole window with the name(If name is not blank) </summary>
	<remarks> Format: (Name): (Time In Decimal Format) Seconds</remarks>
 ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.Performance.NewTest(System.String)">
 ------------------------------------------------------------------------------------------
  Name: NewTest
  ------------------------------------------------------------------------------------------
 <summary> Initializes a new test </summary>
	<param name="strName">Name of the test</param>
	<returns>The Performance object, so you can immediately use .Start inline</returns>
	<remarks>Does not start the test timer.</remarks>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.Performance.GroupCyclesByText">
 ------------------------------------------------------------------------------------------
  Name: GroupCyclesByText
  ------------------------------------------------------------------------------------------
 <summary> Calculates the average or each group of same named cycles, and condenses the current list to this new list. </summary>
	<remarks> Overwrites current cycles.</remarks>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.Performance.PrintTestToString">
 ------------------------------------------------------------------------------------------
  Name: PrintTestToString
  ------------------------------------------------------------------------------------------
 <summary> Prints the test to string. </summary>
	<returns>The test data in a formatted string</returns>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.Performance.CalculateAndPrintChange(System.Double,System.Double)">
 ------------------------------------------------------------------------------------------
  Name: CalculateAndPrintChange
  ------------------------------------------------------------------------------------------
 <summary> Calculates the difference between two test times and prints the change to the CConsole window </summary>
	<param name="dblTime1">The performance result from the first test</param>
	<param name="dblTime2">The performance result from the second test</param>
	<returns>The percentage of difference</returns>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.Performance.CalculateAndReturnChangeString(System.Double,System.Double)">
 ------------------------------------------------------------------------------------------
  Name: CalculateAndReturnChangeString
  ------------------------------------------------------------------------------------------
 <summary> Calculates the difference between two test times and returns an informational string </summary>
	<param name="dblTime1">The performance result from the first test</param>
	<param name="dblTime2">The performance result from the second test</param>
	<returns>A string describing the difference in times</returns>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.Performance.CalculateAndReturnChangeString(System.TimeSpan,System.TimeSpan)">
 ------------------------------------------------------------------------------------------
  Name: CalculateAndReturnChangeString
  ------------------------------------------------------------------------------------------
 <summary> Calculates the difference between two test times and returns a informational string </summary>
	<param name="tspnTime1">The performance result from the first test</param>
	<param name="tspnTime2">The performance result from the second test</param>
	<returns>A string describing the difference in times</returns>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.Performance.CalculateAndPrintChange(System.TimeSpan,System.TimeSpan)">
 ------------------------------------------------------------------------------------------
  Name: CalculateAndPrintChange
  ------------------------------------------------------------------------------------------
 <summary> Calculates the difference between two test times and prints the change to the CConsole window </summary>
	<param name="tspnTime1">The performance result from the first test</param>
	<param name="tspnTime2">The performance result from the second test</param>
	<returns>The percentage of difference</returns>
  ------------------------------------------------------------------------------------------

</member><member name="T:CConsoleCompatabilityClient.Performance.TestCycleData">
 ------------------------------------------------------------------------------------------
  Name: TestCycleData
  ------------------------------------------------------------------------------------------
 <summary>A class designed to hold the information of a test cycle for a performance test.</summary>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.WindowsMethods.FindWindow(System.String,System.String)">
	<summary>
 Retrieves a handle to the top-level window whose class name and window name match 
 the specified strings.
 This function does not search child windows.
 This function does not perform a case-sensitive search.
 </summary>
	<param name="lpClassName">If lpClassName is null, it finds any window whose title matches
 the lpWindowName parameter.</param>
	<param name="lpWindowName">The window name (the window's title). If this parameter is null,
 all window names match.</param>
	<returns>If the function succeeds, the return value is a handle to the window 
 that has the specified class name and window name.</returns>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.HWND_BROADCAST">
	<summary>
 Handle used to send the message to all windows
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.WM_COPYDATA">
	<summary>
 An application sends the WM_COPYDATA message to pass data to another application.
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.COPYDATASTRUCT.dwData">
	<summary>
 User defined data to be passed to the receiving application.
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.COPYDATASTRUCT.cbData">
	<summary>
 The size, in bytes, of the data pointed to by the lpData member.
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.COPYDATASTRUCT.lpData">
	<summary>
 The data to be passed to the receiving application. This member can be IntPtr.Zero.
 </summary>
</member><member name="T:CConsoleCompatabilityClient.WindowsMethods.COPYDATASTRUCT">
	<summary>
 Contains data to be passed to another application by the WM_COPYDATA message.
 </summary>
</member><member name="M:CConsoleCompatabilityClient.WindowsMethods.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
	<summary>
 Sends the specified message to a window or windows.
 </summary>
	<param name="hWnd">A handle to the window whose window procedure will receive the message.
 If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level
 windows in the system.</param>
	<param name="Msg">The message to be sent.</param>
	<param name="wParam">Additional message-specific information.</param>
	<param name="lParam">Additional message-specific information.</param>
	<returns>The return value specifies the result of the message processing; 
 it depends on the message sent.</returns>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.MessageFilterInfo.None">
	<summary>
 Certain messages whose value is smaller than WM_USER are required to pass 
 through the filter, regardless of the filter setting. 
 There will be no effect when you attempt to use this function to 
 allow or block such messages.
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.MessageFilterInfo.AlreadyAllowed">
	<summary>
 The message has already been allowed by this window's message filter, 
 and the function thus succeeded with no change to the window's message filter. 
 Applies to MSGFLT_ALLOW.
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.MessageFilterInfo.AlreadyDisAllowed">
	<summary>
 The message has already been blocked by this window's message filter, 
 and the function thus succeeded with no change to the window's message filter. 
 Applies to MSGFLT_DISALLOW.
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.MessageFilterInfo.AllowedHigher">
	<summary>
 The message is allowed at a scope higher than the window.
 Applies to MSGFLT_DISALLOW.
 </summary>
</member><member name="T:CConsoleCompatabilityClient.WindowsMethods.MessageFilterInfo">
	<summary>
 Values used in the struct CHANGEFILTERSTRUCT
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.ChangeWindowMessageFilterExAction.Reset">
	<summary>
 Resets the window message filter for hWnd to the default.
 Any message allowed globally or process-wide will get through,
 but any message not included in those two categories,
 and which comes from a lower privileged process, will be blocked.
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.ChangeWindowMessageFilterExAction.Allow">
	<summary>
 Allows the message through the filter. 
 This enables the message to be received by hWnd, 
 regardless of the source of the message, 
 even it comes from a lower privileged process.
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.ChangeWindowMessageFilterExAction.DisAllow">
	<summary>
 Blocks the message to be delivered to hWnd if it comes from
 a lower privileged process, unless the message is allowed process-wide 
 by using the ChangeWindowMessageFilter function or globally.
 </summary>
</member><member name="T:CConsoleCompatabilityClient.WindowsMethods.ChangeWindowMessageFilterExAction">
	<summary>
 Values used by ChangeWindowMessageFilterEx
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.CHANGEFILTERSTRUCT.size">
	<summary>
 The size of the structure, in bytes. Must be set to sizeof(CHANGEFILTERSTRUCT), 
 otherwise the function fails with ERROR_INVALID_PARAMETER.
 </summary>
</member><member name="F:CConsoleCompatabilityClient.WindowsMethods.CHANGEFILTERSTRUCT.info">
	<summary>
 If the function succeeds, this field contains one of the following values, 
 <see cref="T:CConsoleCompatabilityClient.WindowsMethods.MessageFilterInfo"/>
	</summary>
</member><member name="T:CConsoleCompatabilityClient.WindowsMethods.CHANGEFILTERSTRUCT">
	<summary>
 Contains extended result information obtained by calling 
 the ChangeWindowMessageFilterEx function.
 </summary>
</member><member name="M:CConsoleCompatabilityClient.WindowsMethods.ChangeWindowMessageFilterEx(System.IntPtr,System.UInt32,CConsoleCompatabilityClient.WindowsMethods.ChangeWindowMessageFilterExAction,CConsoleCompatabilityClient.WindowsMethods.CHANGEFILTERSTRUCT@)">
	<summary>
 Modifies the User Interface Privilege Isolation (UIPI) message filter for a specified window
 </summary>
	<param name="hWnd">
 A handle to the window whose UIPI message filter is to be modified.</param>
	<param name="msg">The message that the message filter allows through or blocks.</param>
	<param name="action">The action to be performed, and can take one of the following values
 <see cref="T:CConsoleCompatabilityClient.WindowsMethods.MessageFilterInfo"/></param>
	<param name="changeInfo">Optional pointer to a 
 <see cref="T:CConsoleCompatabilityClient.WindowsMethods.CHANGEFILTERSTRUCT"/> structure.</param>
	<returns>If the function succeeds, it returns TRUE; otherwise, it returns FALSE. 
 To get extended error information, call GetLastError.</returns>
</member><member name="T:CConsoleCompatabilityClient.WindowsMethods">
 ------------------------------------------------------------------------------------------
  Name: WindowsMethods
  ------------------------------------------------------------------------------------------
 <summary>Static class used for various windows functions.</summary>
	<remarks>Code based off a tutorial and MSDN</remarks>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.DebugTools.Serialization.JSON.Serialize(System.Object)">
 ------------------------------------------------------------------------------------------
  Name: Serialize
  ------------------------------------------------------------------------------------------
 <summary> Serializes the specified object into JSON. </summary>
	<param name="objToSerialize">The object to serialize.</param>
	<returns>The JSON string</returns>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.DebugTools.Serialization.JSON.Deserialize``1(System.String)">
 ------------------------------------------------------------------------------------------
  Name: Deserialize
  ------------------------------------------------------------------------------------------
 <summary> Deserialize the specified JSON string into an object of type T. </summary>
	<typeparam name="T"></typeparam>
	<param name="strJSON">The JSON to deserialize.</param>
	<returns>T</returns>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.DebugTools.Serialization.JSON.DeserializeFile``1(System.String)">
 ------------------------------------------------------------------------------------------
  Name: DeserializeFile
  ------------------------------------------------------------------------------------------
 <summary> Accesses a file storing only a JSON string, and deserialize it into an object of type T.</summary>
	<typeparam name="T"></typeparam>
	<param name="strPath">The file path.</param>
	<returns>T</returns>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.DebugTools.Serialization.JSON.CacheObject(System.Object,System.String)">
 ------------------------------------------------------------------------------------------
  Name: CacheObject
  ------------------------------------------------------------------------------------------
 <summary> Serializes an object and writes the JSON string to file. </summary>
	<param name="objToCache">The object to cache.</param>
	<param name="strPath">The path to save the file.</param>
  ------------------------------------------------------------------------------------------

</member><member name="M:CConsoleCompatabilityClient.MMain.IsNullOrEmpty(System.Collections.IEnumerable)">
 ------------------------------------------------------------------------------------------
  Name: IsNullOrEmpty
  ------------------------------------------------------------------------------------------
 <summary> Determines whether this Ienumerable is nothing and has no members . </summary>
	<returns><c>true</c> if [is null or empty] returns true; otherwise, <c>false</c>.</returns>
  ------------------------------------------------------------------------------------------

</member><member name="P:CConsoleCompatabilityClient.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:CConsoleCompatabilityClient.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:CConsoleCompatabilityClient.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>